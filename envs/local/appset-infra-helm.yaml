apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: infra-helm
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          # - cluster: {}
          - list:
              elements:
                - appName: ingress-nginx
                  repoURL: https://kubernetes.github.io/ingress-nginx
                  namespace: ingress
                  targetRevision: "4.7.1"
                - appName: metrics-server
                  repoURL: https://kubernetes-sigs.github.io/metrics-server
                  namespace: monitoring
                  targetRevision: "3.12.*"
                - appName: loki
                  repoURL: https://grafana.github.io/helm-charts
                  namespace: monitoring
                  targetRevision: "4.8.0" # "5.0.0" is out
                - appName: kube-prometheus-stack
                  repoURL: https://prometheus-community.github.io/helm-charts
                  namespace: monitoring
                  targetRevision: "65.1.0" #"45.7.1"
                - appName: sealed-secrets
                  repoURL: https://bitnami-labs.github.io/sealed-secrets
                  namespace: kube-system
                  targetRevision: "2.16.1"
                - appName: argo-rollouts
                  repoURL: https://argoproj.github.io/argo-helm
                  namespace: argocd
                  targetRevision: "2.37.7"
                - appName: argo-image-updater
                  repoURL: https://argoproj.github.io/argo-helm
                  namespace: argocd
                  targetRevision: "0.11.0"
                - appName: argo-events
                  repoURL: https://argoproj.github.io/argo-helm
                  namespace: argocd
                  targetRevision:
                    "2.4.8"
                    #- appName: submariner-operator
                    #  repoURL: https://submariner-io.github.io/submariner-charts/charts
                    #  namespace: submariner-operator
                    #  targetRevision: "0.18.*" # TODO Document targetRevision
                #  TODO: Bootstrap using quay.io/submariner/subctl:0.18.1
                - appName: crossplane
                  repoURL: https://charts.crossplane.io/stable
                  namespace: crossplane-system
                  targetRevision: "1.17.*"
                - appName: gatekeeper
                  repoURL: https://open-policy-agent.github.io/gatekeeper/charts
                  namespace: gatekeeper-system
                  targetRevision: "3.17.*"
                #  - appName: cluster-manager
                #  repoURL: https://open-cluster-management.io/helm-charts
                #  namespace: open-cluster-management
                #  targetRevision: "0.15.0"
                - appName: submariner-k8s-broker
                  repoURL: https://submariner-io.github.io/submariner-charts/charts
                  namespace: submariner-k8s-broker
                  targetRevision: "0.18.1"
            # TODO: Customized local charts need templatePath below
            #- appName: submariner-operator
            #  namespace: submariner-operator
            #  targetRevision: main
            #  path:
            #    "apps/infra/submariner-operator"
            #   repoURL: https://helm.cilium.io
            #   namespace: kube-system
            #   targetRevision: "1.16.2" # Must not be floating - used in terraform
          - git:
              repoURL: https://github.com/deas/argocd-conductr.git
              revision: main
              directories:
                - path: "apps/infra/{{ .appName }}/envs/local"
  # Beware : group WITHOUT version
  # TODO: : Those diffs should probably not exist and be fixed further upstream
  templatePatch: |
    spec:
      ignoreDifferences:
      {{- if eq .appName "sealed-secrets" }}
      - jsonPointers:
        - /metadata/annotations
        kind: "ServiceMonitor"
        group: "monitoring.coreos.com"
      {{- else if eq .appName "loki" }}
      - jsonPointers:
        - /spec/volumeClaimTemplates
        kind: "StatefulSet"
        group: "apps"
      - jqPathExpressions:
        - .spec.relabelings[]
        kind: "PodLogs"
        group: "monitoring.grafana.com"
      - jqPathExpressions:
        - .spec.endpoints[].relabelings[]
        kind: "ServiceMonitor"
        group: "monitoring.coreos.com"
      {{- end }}
  #    source:
  #      helm:
  #        valueFiles:
  #        {{- range $valueFile := .valueFiles }}
  #          - {{ $valueFile }}
  #          {{- end }}
  #    {{- if .autoSync }}
  #      syncPolicy:
  #        automated:
  #          prune: {{ .prune }}
  #    {{- end }} #
  #  spec:
  #    source:
  #      helm:
  #        valueFiles:
  #        {{- range $#valueFile := .valueFiles }}
  #         - {{ $valueFile | toJson }}
  #          {{- end }}
  template:
    metadata:
      # We don't env/stage at the name level
      name: "{{index .path.segments 2}}" # -{{index .path.segments 3}}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: local-ops
      #  argocd.argoproj.io/sync-options: Prune=false
    spec:
      # The project the application belongs to.
      project: default

      # Source of the application manifests
      sources:
        # repoURL: https://github.com/deas/argocd-conductr.git
        # targetRevision: main
        # path: "{{.path.path}}"
        - repoURL: "{{ .repoURL }}"
          chart: "{{ .appName }}"
          targetRevision: "{{ .targetRevision }}"
          helm:
            # Helm values files for overriding values in the helm chart
            # The path is relative to the spec.source.path directory defined above
            valueFiles:
              - "$values/{{ .path.path }}/../../values.yaml"
              - "$values/{{ .path.path }}/values.yaml"
        - repoURL: https://github.com/deas/argocd-conductr.git
          targetRevision: main
          ref: values
      # Destination cluster and namespace to deploy the application
      destination:
        server: https://kubernetes.default.svc
        # We don't stage/env at the ns level
        # namespace: "{{index .path.segments 2}}" # -{{index .path.segments 3}}'
        namespace: "{{ .namespace }}"

      # Sync policy
      syncPolicy:
        syncOptions:
          # https://www.arthurkoziel.com/fixing-argocd-crd-too-long-error/
          - ServerSideApply=true
          - CreateNamespace=true
          # - RespectIgnoreDifferences=true
        automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
          prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
          selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
