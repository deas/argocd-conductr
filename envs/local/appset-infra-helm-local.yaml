apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: infra-helm-local
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          # - cluster: {}
          - list:
              elements:
                # TODO: Customized local charts need templatePath below
                - appName: operators
                  namespace: operators
                  repoURL: https://github.com/deas/argocd-conductr.git
                  targetRevision: main
                  chartPath: "apps/infra/operators"
                - appName: registration-operator-hub
                  namespace: open-cluster-management
                  repoURL: https://github.com/deas/argocd-conductr.git
                  targetRevision: main
                  chartPath: "apps/infra/registration-operator-hub"
                - appName: submariner-operator
                  namespace: submariner-operator
                  repoURL: https://github.com/deas/argocd-conductr.git
                  targetRevision: main
                  chartPath: "apps/infra/submariner-operator"
                - appName: monitoring
                  namespace: monitoring
                  repoURL: https://github.com/deas/argocd-conductr.git
                  targetRevision: main
                  chartPath: "apps/infra/monitoring"
                - appName: monitoring-webhook
                  namespace: monitoring
                  repoURL: https://github.com/deas/argocd-conductr.git
                  targetRevision: main
                  chartPath: "apps/infra/monitoring-webhook"
          - git:
              repoURL: https://github.com/deas/argocd-conductr.git
              revision: main
              directories:
                - path: "apps/infra/{{ .appName }}/envs/local"
              # apps/*envs/local
              # - path: apps/*/envs/local
  #templatePatch: |
  #  {{- if hasKey . "chartPath" }}
  #  spec:
  #    sources:
  #      0:
  #        path: {{ .chartPath }}
  #  {{- end }}
  template:
    metadata:
      # We don't env/stage at the name level
      name: "{{index .path.segments 2}}" # -{{index .path.segments 3}}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: local-ops
      #  argocd.argoproj.io/sync-options: Prune=false
    spec:
      project: default

      source:
        repoURL: "{{ .repoURL }}"
        targetRevision: main
        chart: ""
        path: "{{ .chartPath }}"
        helm:
          valueFiles:
            - "values.yaml"
            - "envs/local/values.yaml"
      destination:
        server: https://kubernetes.default.svc
        # We don't stage/env at the ns level
        # namespace: "{{index .path.segments 2}}" # -{{index .path.segments 3}}'
        namespace: "{{ .namespace }}"

      syncPolicy:
        syncOptions:
          # https://www.arthurkoziel.com/fixing-argocd-crd-too-long-error/
          - ServerSideApply=true
          - CreateNamespace=true
        automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
          prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
          selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).

